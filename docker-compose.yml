services:
  front:
    build:
      context: ./front
    container_name: devops-front
    networks:
      - devops-network-front

  web:
    build:
      context: ./web
    container_name: devops-web
    depends_on:
      - api
    ports:
      - "80:80"
    networks:
      - devops-network-front
      - devops-network-back

  api:
    build:
      context: ./api
    container_name: devops-api
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
    env_file:
      - .env
    networks:
      - devops-network-back
      - devops-network-db

  db:
    build:
      context: ./db
    container_name: devops-db
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - devops-network-db

networks:
  - devops-network-front
  - devops-network-back
  - devops-network-db
  
volumes:
  db-data:/var/lib/postgresql/data:rw